<?php

class arealist_model extends CI_Model{
	function __construct(){
		parent::__construct();
		$this->load->database();
	}

	/**
	 * 获取所有学校列表
	 * @author ca007
	 * @return list <br>
	 * school : school name<br>
	 * areaID : areaID
	 */
	function getSchoolList(){
		$sql = "SELECT DISTINCT `school`,areaID FROM `area_list` WHERE areaID LIKE '1____00000000'";
		$schoolList = $this->db->query($sql)->result_array();
		return $schoolList;
	}

	/**
	 * 获取学校所有院系列表
	 * @author ca007
	 * @param string $schoolID 学校ID
	 * @return list <br>
	 * department : department name<br>
	 * areaID : areaID
	 */
	function getDepartmentList($schoolID){
		$sql = "SELECT `department`,areaID FROM `area_list` WHERE (areaID NOT LIKE ?)  AND (areaID LIKE ?)";
	//	return $sql;
		$res = $this->db->query($sql,array(substr($schoolID, 0, 5).'00000000',substr($schoolID, 0, 5).'____0000'))->result_array();
		return $res;
	}

	/**
	 * 获取院系所有班级列表
	 * @author ca007
	 * @param string $departmentID 院系ID
	 * @return list <br>
	 * class : class name<br>
	 * areaID : areaID
	 */
	function getClassList($departmentID){
		$sql = "SELECT `class`,areaID FROM `area_list` WHERE (areaID NOT LIKE ?)  AND (areaID LIKE ?)";
	//	return $sql;
		$res = $this->db->query($sql,array(substr($departmentID, 0, 9).'0000',substr($departmentID, 0, 9).'____'))->result_array();
		return $res;
	}

	/**
	 * 获取群组名
	 * @param string $areaID 群组ID
	 * @return string 群组名
	 */
	function getAreaName($areaID){
		$sql = "SELECT `class` FROM area_list WHERE areaID=?";
		$res = $this->db->query($sql,array($areaID))->result_array();
		if(count($res) == 0){
			return errorMessage(0,'Error areaID: '.$areaID);
		}
		return array_merge(array('areaName'=>$res[0]['class']),errorMessage(1,'OK'));
	}

	/**
	* 新增学校
	* @author LJNanest
	* @param string $schoolName 学校名称
	*/
	function newSchool($schoolName){
		if (strlen($schoolName)<1){
			return array('error'=>array('code'=>-1,'message'=>'请输入学校名称!'));
		}
		$schoolList = getSchoolList();
		$schoolNum = count($schoolList);
		if ($schoolNum >9999){
			return array('error'=>array('code'=>-1,'message'=>'学校数量已满!'));
		}
		$schoolID = 1000000000000 + $schoolNum * 100000000;
		$newArea = array(
				"school"=>$schoolName,
				"department"=>$schoolName,
				"class"=>$schoolName,
				"areaID"=>$schoolID
			);
		$this->db->insert('area_list',$newArea);
		return array('error'=>array('code'=>1,'message'=>'新增学校成功'));
	}

	/**
	* 新增学院 
	* @author LJNanest
	* @param string $schoolID 学校ID
	* @param string $departmentName 学院名称
	*/
	function newDepartment($schoolID,$departmemtName){
		if (strlen($department)<1) return array('error'=>array('code'=>-1,'message'=>'请输入院系名称!'));
		if ($schoolID == 0) return array('error'=>array('code'=>-1,'message'=>'请选择学校!'));
		$tmp = getDepartmentList($schoolID);
		$num = count($tmp);
		if ($num >9999){
			return array('error'=>array('code'=>-1,'message'=>'贵校院系数量已满!'));
		}
		$newID = $schoolID+$num*10000;
		$newArea = array(
				'school'=>$tmp[0]['school'],
				'department'=>$departmemtName,
				'class'=>$departmemtName,
				'areaID'=>$newID
			);
		$this->db->insert('area_list',$newArea);
		return array('error'=>array('code'=>1,'message'=>'新增院系成功'));
	}


	function newClass($departmentID,$className)
	{
		if (strlen($className)<1) return errorMessage(-1,'请输入班级名称');
		if ($departmentID == 0) return errorMessage(-1,'请选择院系');
		$tmp = getClassList($departmentID);
		$num = count($num);
		if ($num > 9999) return errorMessage(-1,'贵院系班级数量已满!');
		$newID = $departmentID + $num;
		$newArea = array(
				'school'=>$tmp[0]['school'],
				'department'=>$tmp[0]['department'],
				'class'=>$tmp[0]['class'],
				'areaID'=>$newID
			);
		$this->db->insert('area_list',$newArea);
		return errorMessage(1,'新增班级成功');
	}

	/**
	 * 检查当前用户是否为群组用户
	 */
	function isMemberOfArea($areaID){
		if(!isset($_SESSION['userID'])){
			return false;
		}
		$tmp = $this->db->from('member_list')->where('userID',$_SESSION['userID'])->where('areaID',$areaID)->get()->result_array();
		if(count($tmp)){
			return true;
		}
	}

	function getSchoolByUser()
	{
		$sql = "SELECT area_list.ID ,area_list.areaID, area_list.school as name
				FROM member_list, area_list
				WHERE userID = ? AND (member_list.areaID LIKE '1____00000000') AND area_list.areaID = member_list.areaID";
		$schoolList = $this->db->query($sql,array($_SESSION['userID']))->result_array();
		return $schoolList;
	}

	function getDepartmentByUser()
	{
		$sql = "SELECT area_list.ID ,area_list.areaID, area_list.department as name
				FROM member_list, area_list
				WHERE userID = ? AND (member_list.areaID NOT LIKE '1____00000000') AND (member_list.areaID LIKE '1________0000') AND area_list.areaID = member_list.areaID";
		$departmentList = $this->db->query($sql,array($_SESSION['userID']))->result_array();
		return $departmentList;
	}

	function getClassByUser()
	{
		$sql = "SELECT area_list.ID ,area_list.areaID, area_list.class as name
				FROM member_list, area_list
				WHERE userID = ? AND (member_list.areaID NOT LIKE '1________0000') AND (member_list.areaID LIKE '1____________') AND area_list.areaID = member_list.areaID";
		$classList = $this->db->query($sql,array($_SESSION['userID']))->result_array();
		return $classList;
	}

	function updataClass($schoolID,$departmentID,$classID)
	{
		$school = $this->getSchoolByUser();
		$department = $this->getDepartmentByUser();
		$class = $this->getClassByUser();
		if (count($class) != 0) return errorMessage(1,'无需更新');
		$this->db->insert('member_list',array('userID'=>$_SESSION['userID'],'areaID'=>$classID));
		if (count($department) == 0) $this->db->insert('member_list',array('userID'=>$_SESSION['userID'],'areaID'=>$departmentID));
		if (count($school) == 0) $this->db->insert('member_list',array('userID'=>$_SESSION['userID'],'areaID'=>$schoolID));

		$classList = $this->db->from('area_list')->where('areaID',$classID)->get()->result_array();
		$className = $classList[0]['class'];
		$departmentList = $this->db->from('area_list')->where('areaID',$departmentID)->get()->result_array();
		$departmentName = $departmentList[0]['class'];

		$_SESSION['areaID'] = $departmentID;
		$_SESSION['areaName'] = $departmentName;
		$userClass=array(
			'class'=>$className,
			'defaultAreaID'=>$departmentID);
		$this->db->where('ID',$_SESSION['userID'])->update('user_list',$userClass);
		return errorMessage(1,'初始化成功');
	}

/*
	function delClassbyUser()
	{
		
		$this->db->where('userID',$_SESSION['userID'])->delete('member_list');
	}
*/
/*
	function addClass(){
		for($i = 0;$i < 10;$i ++){
			for($j = 1;$j < 4;$j ++){
				$newClass = array(
								'areaID'=>'10001000520'.$i.$j,
								'school'=>'清华大学',
								'department'=>'机械系',
								'class'=>'机'.$i.$j);
				$this->db->insert('area_list',$newClass);
			}
		}
	}
*/
}

?>